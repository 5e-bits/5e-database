# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: 5e Database CI/CD

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Run linter
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: npm install
      - run: npm run lint

  test:
    name: Run tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: npm install
      - run: npm run test

  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    needs: [test, lint]
    if: ${{ github.event_name != 'pull_request' && github.repository == '5e-bits/5e-database' }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Refresh DB contents
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: |
          npm install
          npm run db:refresh

  github-release:
    name: Github Release
    runs-on: ubuntu-20.04
    needs: [deploy]
    if: ${{ github.event_name != 'pull_request' && github.repository == '5e-bits/5e-database' }}
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  container-release:
    name: Container Release
    runs-on: ubuntu-20.04
    needs: [github-release]
    if: ${{ needs.github-release.outputs.new_release_published == 'true' && github.repository == '5e-bits/5e-database' }}
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.github-release.outputs.version }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels:
            version=${{ needs.github-release.outputs.version }}

  trigger_downstream:
    name: Trigger downstream
    runs-on: ubuntu-20.04
    needs: deploy
    if: ${{ github.ref == 'refs/heads/main' && github.repository == '5e-bits/5e-database' }}
    steps:
      - name: Trigger downstream
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: 5e-bits/5e-srd-api
          event-type: build_application
