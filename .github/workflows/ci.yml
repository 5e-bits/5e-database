# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: 5e Database CI/CD

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test

  deploy:
    name: Deploy Changes (Update Database)
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: ${{ github.event_name != 'pull_request' && github.repository == '5e-bits/5e-database' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Set up Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run Database Update Script
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: npm run db:update

  github-release:
    name: Create Github Release
    runs-on: ubuntu-latest
    needs: [deploy]
    if: ${{ github.event_name != 'pull_request' && github.repository == '5e-bits/5e-database' }}
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      version: ${{ steps.semantic.outputs.new_release_version }}
    permissions:
      contents: write
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # Use a specific version
        with:
          # These secrets will be resolved from Org or Repo level
          app_id: ${{ secrets.SEMANTIC_RELEASE_APP_ID }}
          private_key: ${{ secrets.SEMANTIC_RELEASE_APP_PRIVATE_KEY }}
      - name: Checkout latest code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # @v4.2.2
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
      - name: Install Dependencies
        run: npm ci
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@0a51e81a6baff2acad3ee88f4121c589c73d0f0e # @v4.2.0
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

  container-release:
    name: Container Release
    runs-on: ubuntu-latest
    needs: [github-release]
    if: ${{ needs.github-release.outputs.new_release_published == 'true' && github.repository == '5e-bits/5e-database' }}
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.github-release.outputs.version }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: version=${{ needs.github-release.outputs.version }}

  trigger_downstream:
    name: Trigger downstream
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ github.ref == 'refs/heads/main' && github.repository == '5e-bits/5e-database' }}
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # Use a specific version
        with:
          # These secrets will be resolved from Org or Repo level
          app_id: ${{ secrets.DEPLOYMENT_APP_ID }}
          private_key: ${{ secrets.DEPLOYMENT_APP_PRIVATE_KEY }}
      - name: Trigger downstream
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
          repository: 5e-bits/5e-srd-api
          event-type: build_application
